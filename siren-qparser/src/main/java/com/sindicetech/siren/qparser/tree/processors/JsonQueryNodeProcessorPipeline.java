/**
 * Copyright (c) 2014, Sindice Limited. All Rights Reserved.
 *
 * This file is part of the SIREn project.
 *
 * SIREn is a free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * SIREn is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package com.sindicetech.siren.qparser.tree.processors;

import org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline;
import org.apache.lucene.search.Query;

import com.sindicetech.siren.qparser.tree.config.ExtendedTreeQueryConfigHandler;
import com.sindicetech.siren.qparser.tree.parser.JsonSyntaxParser;

/**
 * This pipeline has all the processors needed to process a query node tree,
 * generated by {@link JsonSyntaxParser}, already assembled.
 *
 * <p>
 *
 * The order they are assembled affects the results.
 *
 * <p>
 *
 * This processor pipeline was designed to work with
 * {@link com.sindicetech.siren.qparser.tree.config.ExtendedTreeQueryConfigHandler}.
 *
 * <p>
 *
 * The result query node tree can be used to build a {@link Query} object using
 * {@link com.sindicetech.siren.qparser.tree.builders.ExtendedTreeQueryTreeBuilder}.
 *
 * @see com.sindicetech.siren.qparser.tree.builders.ExtendedTreeQueryTreeBuilder
 * @see com.sindicetech.siren.qparser.tree.config.ExtendedTreeQueryConfigHandler
 * @see JsonSyntaxParser
 */
public class JsonQueryNodeProcessorPipeline extends QueryNodeProcessorPipeline {

  public JsonQueryNodeProcessorPipeline(final ExtendedTreeQueryConfigHandler queryConfigHandler) {
    super(queryConfigHandler);

    this.add(new VariableModifierQueryNodeProcessor());
  }

}
